package com.operationgames.flappy;

import static org.lwjgl.opengl.GL11.*;

import java.io.FileInputStream;

import javazoom.jl.player.Player;

import org.lwjgl.LWJGLException;
import org.lwjgl.opengl.ContextAttribs;
import org.lwjgl.opengl.Display;
import org.lwjgl.opengl.DisplayMode;
import org.lwjgl.opengl.PixelFormat;

public class Main implements Runnable {
	
	private int width = 1280;
	private int height = 720;
	private String title = "Flappy";
	
	private boolean running = false;
	private Thread thread;
	
	private void start() {
		running = true;
		thread = new Thread(this, "Display");
		thread.start();

		
	}
	
	private void init() {
		String version =  glGetString(GL_VERSION);
		System.out.println("OpenGL " + version);
		glClearColor(1.0f, 1.0f, 1.0f, 1.0f);
		ms();
	}
	
	public static ms() {
		
		try{

		    FileInputStream fis = new FileInputStream("C:/FlappyBirds/workspace/Flappy/src/com/operationgames/flappy/sounds/Background.mp3");
		    Player playMP3 = new Player(fis);
		    playMP3.play();
		    

		    }catch(Exception e){System.out.println(e);}
	}
	
	public void run() {
		try {
			Display.setDisplayMode(new DisplayMode(width, height));
			Display.setTitle(title);
			ContextAttribs context = new ContextAttribs(3, 3);
			Display.create(new PixelFormat(), context.withProfileCore(true));
			if (System.getProperty("os.name").contains("Mac")) context = new ContextAttribs(3, 2);
			String OS = System.getProperty("os.name");
			System.out.println("OS - " + OS);
			
			while (running) {
				if (running == false) {
					System.exit(1);
				}
			}
		} catch (LWJGLException e) {
			e.printStackTrace();
		}
		init();
		
		while (running) {
			render();
			Display.update();
			if (Display.isCloseRequested()) running = false;
			
		}
		Display.destroy();
	}
	
	private void render() {
		glClear(GL_COLOR_BUFFER_BIT);
	}
	
	public static void main(String[] args) {
		new Main().start();
		
	}

}
